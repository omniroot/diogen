/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as ProjectsIndexRouteImport } from "./routes/projects/index"
import { Route as TasksTask_idRouteImport } from "./routes/tasks/$task_id"
import { Route as ProjectsCustom_idIndexRouteImport } from "./routes/projects/$custom_id/index"
import { Route as ProjectsCustom_idModulesIndexRouteImport } from "./routes/projects/$custom_id/modules/index"
import { Route as ProjectsCustom_idModulesModule_idIndexRouteImport } from "./routes/projects/$custom_id/modules/$module_id/index"

const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: "/projects/",
  path: "/projects/",
  getParentRoute: () => rootRouteImport,
} as any)
const TasksTask_idRoute = TasksTask_idRouteImport.update({
  id: "/tasks/$task_id",
  path: "/tasks/$task_id",
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsCustom_idIndexRoute = ProjectsCustom_idIndexRouteImport.update({
  id: "/projects/$custom_id/",
  path: "/projects/$custom_id/",
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsCustom_idModulesIndexRoute =
  ProjectsCustom_idModulesIndexRouteImport.update({
    id: "/projects/$custom_id/modules/",
    path: "/projects/$custom_id/modules/",
    getParentRoute: () => rootRouteImport,
  } as any)
const ProjectsCustom_idModulesModule_idIndexRoute =
  ProjectsCustom_idModulesModule_idIndexRouteImport.update({
    id: "/projects/$custom_id/modules/$module_id/",
    path: "/projects/$custom_id/modules/$module_id/",
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/tasks/$task_id": typeof TasksTask_idRoute
  "/projects": typeof ProjectsIndexRoute
  "/projects/$custom_id": typeof ProjectsCustom_idIndexRoute
  "/projects/$custom_id/modules": typeof ProjectsCustom_idModulesIndexRoute
  "/projects/$custom_id/modules/$module_id": typeof ProjectsCustom_idModulesModule_idIndexRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/tasks/$task_id": typeof TasksTask_idRoute
  "/projects": typeof ProjectsIndexRoute
  "/projects/$custom_id": typeof ProjectsCustom_idIndexRoute
  "/projects/$custom_id/modules": typeof ProjectsCustom_idModulesIndexRoute
  "/projects/$custom_id/modules/$module_id": typeof ProjectsCustom_idModulesModule_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/tasks/$task_id": typeof TasksTask_idRoute
  "/projects/": typeof ProjectsIndexRoute
  "/projects/$custom_id/": typeof ProjectsCustom_idIndexRoute
  "/projects/$custom_id/modules/": typeof ProjectsCustom_idModulesIndexRoute
  "/projects/$custom_id/modules/$module_id/": typeof ProjectsCustom_idModulesModule_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/tasks/$task_id"
    | "/projects"
    | "/projects/$custom_id"
    | "/projects/$custom_id/modules"
    | "/projects/$custom_id/modules/$module_id"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/tasks/$task_id"
    | "/projects"
    | "/projects/$custom_id"
    | "/projects/$custom_id/modules"
    | "/projects/$custom_id/modules/$module_id"
  id:
    | "__root__"
    | "/"
    | "/tasks/$task_id"
    | "/projects/"
    | "/projects/$custom_id/"
    | "/projects/$custom_id/modules/"
    | "/projects/$custom_id/modules/$module_id/"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TasksTask_idRoute: typeof TasksTask_idRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsCustom_idIndexRoute: typeof ProjectsCustom_idIndexRoute
  ProjectsCustom_idModulesIndexRoute: typeof ProjectsCustom_idModulesIndexRoute
  ProjectsCustom_idModulesModule_idIndexRoute: typeof ProjectsCustom_idModulesModule_idIndexRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/projects/": {
      id: "/projects/"
      path: "/projects"
      fullPath: "/projects"
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/tasks/$task_id": {
      id: "/tasks/$task_id"
      path: "/tasks/$task_id"
      fullPath: "/tasks/$task_id"
      preLoaderRoute: typeof TasksTask_idRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/projects/$custom_id/": {
      id: "/projects/$custom_id/"
      path: "/projects/$custom_id"
      fullPath: "/projects/$custom_id"
      preLoaderRoute: typeof ProjectsCustom_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/projects/$custom_id/modules/": {
      id: "/projects/$custom_id/modules/"
      path: "/projects/$custom_id/modules"
      fullPath: "/projects/$custom_id/modules"
      preLoaderRoute: typeof ProjectsCustom_idModulesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/projects/$custom_id/modules/$module_id/": {
      id: "/projects/$custom_id/modules/$module_id/"
      path: "/projects/$custom_id/modules/$module_id"
      fullPath: "/projects/$custom_id/modules/$module_id"
      preLoaderRoute: typeof ProjectsCustom_idModulesModule_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TasksTask_idRoute: TasksTask_idRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsCustom_idIndexRoute: ProjectsCustom_idIndexRoute,
  ProjectsCustom_idModulesIndexRoute: ProjectsCustom_idModulesIndexRoute,
  ProjectsCustom_idModulesModule_idIndexRoute:
    ProjectsCustom_idModulesModule_idIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
